plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.kosa'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.github.openfeign.querydsl:querydsl-jpa:6.10.1'
	annotationProcessor 'io.github.openfeign.querydsl:querydsl-apt:6.10.1:jpa'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	//스프링 시큐리티 설정
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.security:spring-security-crypto'
	
	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    //이메일 인증
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    

}

// QueryDsl 디렉토리 경로
def querydslSrcDir = 'src/main/generated/querydsl'

// Q파일 생성 디렉토리 삭제 (clean 시)
clean {
    delete file(querydslSrcDir)
}

// Q파일 생성 디렉토리 지정
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

// QueryDSL 전용 소스셋 등록
sourceSets {
    main {
        java {
            srcDirs += querydslSrcDir
        }
    }
}

// QueryDSL 전용 태스크 (Q타입만 생성용)
tasks.register('generateQueryDSL', JavaCompile) {
    group = 'build'
    description = 'Generate Q classes using QueryDSL'

    source = fileTree('src/main/java') {
        include 'org/kosa/tripTalk/*/**/*.java'
    }

    classpath = sourceSets.main.compileClasspath
    destinationDirectory = file(querydslSrcDir)
    options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('test') {
	useJUnitPlatform()
}
